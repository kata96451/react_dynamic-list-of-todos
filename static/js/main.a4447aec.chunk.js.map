{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setIsSelected","setIsLoaded","setSelectedTodo","className","map","todo","userId","completed","classNames","title","type","onClick","selected","window","setTimeout","id","TodoFilter","setComplitedSelect","complitedSelect","setInputValue","inputValue","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","Loader","TodoModal","isSelected","isLoaded","selectedTodo","useState","user","setUser","useEffect","undefined","uselUsers","href","email","name","App","setTodos","filteredTdos","filter","result","startsWith","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4447aec.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n// import { getUser } from '../../api';\n\ninterface Props {\n  todos: Todo[];\n  setIsSelected: (isSelected: boolean) => void,\n  setIsLoaded: (isLoaded: boolean) => void,\n  setSelectedTodo: (selectedTodo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setIsSelected,\n  setIsLoaded,\n  setSelectedTodo,\n}) => {\n  const handeleClick = (selected: Todo) => {\n    setIsSelected(true);\n    setSelectedTodo(selected);\n\n    window.setTimeout(() => {\n      setIsLoaded(true);\n    }, 1000);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.userId}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                todo.completed ? 'has-text-success' : 'has-text-danger',\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handeleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n\n        {/*\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","interface Props {\n  setComplitedSelect: (complitedSelect: string) => void,\n  complitedSelect: string,\n  setInputValue: (inputValue: string) => void,\n  inputValue: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setComplitedSelect,\n  complitedSelect,\n  setInputValue,\n  inputValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={complitedSelect}\n            onChange={(event) => setComplitedSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  isSelected: boolean,\n  isLoaded: boolean,\n  setIsLoaded: (isLoaded: boolean) => void,\n  setIsSelected: (isSelected: boolean) => void,\n  selectedTodo: Todo,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  isSelected,\n  isLoaded,\n  setIsLoaded,\n  setIsSelected,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleClickDelete = () => {\n    setIsLoaded(false);\n    setIsSelected(false);\n  };\n\n  useEffect(() => {\n    if (selectedTodo.userId !== undefined) {\n      getUser(selectedTodo.userId).then(uselUsers => setUser(uselUsers));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <>\n      {isSelected && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n\n          {!isLoaded ? (\n            <Loader />\n          ) : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleClickDelete}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {selectedTodo.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","// /* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isSelected, setIsSelected] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState({} as Todo);\n  const [complitedSelect, setComplitedSelect] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    (getTodos()\n      // .then(res => res.map((todo): Todo => ({\n      //   ...todo,\n      //   user: getUser(todo.userId).then(responce => responce.id),\n      // })))\n      .then(setTodos));\n  }, []);\n\n  const filteredTdos = todos.filter(todo => {\n    let result: boolean;\n\n    if (complitedSelect === 'active') {\n      result = todo.completed === false;\n    } else if (complitedSelect === 'completed') {\n      result = todo.completed === true;\n    } else {\n      return todo;\n    }\n\n    return result;\n  })\n    .filter(todo => {\n      if (inputValue === '') {\n        return todo;\n      }\n\n      return todo.title.startsWith(inputValue);\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setComplitedSelect={setComplitedSelect}\n                complitedSelect={complitedSelect}\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                // eslint-disable-next-line max-len\n                : <TodoList todos={filteredTdos} setIsSelected={setIsSelected} setIsLoaded={setIsLoaded} setSelectedTodo={setSelectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        isSelected={isSelected}\n        isLoaded={isLoaded}\n        setIsLoaded={setIsLoaded}\n        setIsSelected={setIsSelected}\n        selectedTodo={selectedTodo}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}